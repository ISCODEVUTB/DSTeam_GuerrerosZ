name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest  # Usamos Ubuntu como entorno

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # Ejecutar pruebas y generar reporte de cobertura
      - name: Run tests with coverage
        run: |
          PYTHONPATH=$PWD pytest --cov=. --cov-report=xml:coverage.xml --cov-report=html --cov-report=term

      # Verificar que coverage.xml existe
      - name: Verify coverage.xml
        run: ls -l coverage.xml

      # Subir el reporte de cobertura como artefacto en GitHub Actions
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov

      # 🔹 Limpiar caché de Java en GitHub Actions
      - name: Clear Java cache
        run: sudo apt-get remove --purge openjdk* -y

      # 🔹 Agregar instalación de Java 17 (última versión)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      # 🔹 Verificar la versión de Java instalada
      - name: Verify Java version
        run: java -version

      - name: Install SonarScanner
        run: |
          curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.8.0.2856-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

      # Ejecutar SonarQube Scanner con logs de depuración
      - name: Run SonarQube Scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          /opt/sonar-scanner/bin/sonar-scanner -X \
            -Dsonar.projectKey=ISCODEVUTB_DSTeam_GuerrerosZ \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.coverage.reportPaths=coverage.xml
